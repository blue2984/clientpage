{"version":3,"sources":["components/PostResultView.js","components/KeywordResult.js","components/RankResult.js","components/ClientView.js","App.js","serviceWorker.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","light","color","contrastText","body","fontSize","TableCell","PostResult","props","handleClick","word","event","patt","RegExp","newWord","text","postResult","replace","setState","content","selectedWord","state","bind","classes","this","restrictRows","repeatRows","className","root","Grid","container","spacing","height","justify","align","item","xs","Paper","paper","style","overflow","Table","stickyHeader","aria-label","size","width","TableHead","TableRow","TableBody","map","row","index","key","onClick","selected","hover","tableRow","token","component","scope","background","num","dangerouslySetInnerHTML","__html","length","React","Component","flexGrow","marginTop","overflowX","marginBottom","table","borderRight","KeywordResult","handleRequestSort","property","isDesc","orderBy","order","a","b","array","cmp","stabilizedThis","el","sort","desc","totalPost","keywordResult","totalProduct","keywordData","displaydata","slice","Math","min","border","primaryColor","data-title","relKeyword","monthlyPcQcCnt","monthlyMobileQcCnt","monthlyAvePcClkCnt","monthlyAveMobileClkCnt","monthlyAvePcCtr","monthlyAveMobileCtr","tableWrapper","id","numeric","disablePadding","label","sortDirection","TableSortLabel","active","direction","stableSort","getSorting","data","maxHeight","visuallyHidden","clip","margin","padding","position","top","RankResult","items","resultData","rankResult","keyword","rankBlogTab","rankViewTab","TabPanel","children","value","other","Typography","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","form","buttonProgress","left","marginLeft","buttonSuccess","linearProgress","opacity","borderRadius","SimpleTabs","useState","setValue","AppBar","Tabs","onChange","newValue","Tab","PostTab","handleFormSubmit","e","preventDefault","postAnalysis","then","res","result","handleValueChange","nextState","target","name","postUrl","post","command","onSubmit","type","placeholder","Button","variant","KeywordTab","keywordAnalysis","RankTab","loading","rankAnalysis","tabledata","push","rankId","rankKeyword","disabled","LinearProgress","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48bfe1f8.chunk.js","sourcesContent":["import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {withStyles} from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n      width: '100%',\n      flexGrow: 1,\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      width: '100%',\n      overflowX: 'auto',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n\n        borderRight: '1px solid black',\n    },\n    tableRow:{\n        \"&$selected, &$selected:hover\":{\n            backgroundColor: \"purple\"\n        }\n    },\n    hover: {},\n    selected: {}\n});\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.primary.contrastText,\n    },\n    body: {\n      fontSize: 14,\n    },\n}))(TableCell);\n\nclass PostResult extends React.Component\n{\n    constructor(props){\n        super(props);\n        this.state={\n            content:this.props.postResult[2].text,\n            selectedWord:''\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick=(word)=>{\n        return (event) =>{\n            let patt = new RegExp(word, 'g');\n            let newWord = '<span style=\"background-color: blue;\">' + word + '</span>';\n\n            let text = this.props.postResult[2].text;\n\n            text = text.replace(patt, newWord);\n            this.setState({content: text}, () =>{\n            });\n            this.setState({selectedWord:word},()=>{});\n        }      \n    }\n    render(){\n        const {classes} = this.props;\n        const restrictRows = this.props.postResult[0];\n        const repeatRows = this.props.postResult[1];\n\n        return(\n            <div className={classes.root}>\n                <Grid container spacing={3} height={700} justify='center' align='center'>\n                    <Grid item xs={3}>\n                        <Paper className={classes.paper}>\n                        <div style={{overflow:'auto', height:'250px'}}>\n\n                          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n                                <colgroup>\n                                    <col style={{width:'30%'}} />\n                                    <col style={{width:'40%'}} />\n                                    <col style={{width:'30%'}} />\n                                </colgroup>\n                                <TableHead>\n                                <TableRow style={{backgroundColor:'blue', color:'white'}}>\n                                    <StyledTableCell align=\"center\">분류</StyledTableCell>\n                                    <StyledTableCell align=\"center\">단어</StyledTableCell>\n                                    <StyledTableCell align=\"center\">반복수</StyledTableCell>\n                                </TableRow>\n                                </TableHead>                          \n                                <TableBody>\n                                {restrictRows.map((row, index) => (\n                                    <TableRow key={index} onClick={this.handleClick(row.word)}\n                                    selected={this.state.selectedWord === row.word}\n                                    classes={{hover: classes.hover, selected: classes.selected}}\n                                    className={classes.tableRow}\n                                    >\n                                        {row.token ===\"금지\"? \n                                            <TableCell component=\"th\" scope=\"row\" style={{background:'red'}}>\n                                            {row.token}\n                                            </TableCell>\n                                        : row.token ===\"위험\"? \n                                            <TableCell component=\"th\" scope=\"row\" style={{background:'yellow'}}>\n                                            {row.token}\n                                            </TableCell>\n                                        :\n                                            <TableCell component=\"th\" scope=\"row\" style={{background:'green'}}>\n                                            {row.token}\n                                            </TableCell>\n                                        }\n\n                                    <TableCell align=\"right\">{row.word}</TableCell>\n                                    <TableCell align=\"right\">{row.num}</TableCell>\n                                    </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                            </div>\n                        </Paper>     \n\n                        <Paper className={classes.paper}>\n                            <div style={{overflow:'auto', height:'400px'}}>\n                            <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n                                <TableHead style={{backgroundColor:'blue', color:'white'}}>\n                                    <TableRow style={{backgroundColor:'blue', color:'white'}}>\n                                        <StyledTableCell align='center'>단어</StyledTableCell>\n                                        <StyledTableCell align=\"center\">반복수</StyledTableCell>\n                                    </TableRow>\n                                </TableHead>\n                                    <TableBody>\n                                    {repeatRows.map((row, index) => (\n\n                                        <TableRow key={index} onClick={this.handleClick(row.word)}\n                                            selected={this.state.selectedWord === row.word}\n                                            classes={{hover: classes.hover, selected: classes.selected}}\n                                            className={classes.tableRow}\n                                        >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {row.word}\n                                        </TableCell>\n\n                                        <TableCell align=\"right\">{row.num}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </Paper>                      \n\n                    </Grid>\n                    <Grid item xs={9}>\n                        <Paper className={classes.paper}>\n                            <div style={{overflow:'auto', height:'700px'}}>\n                                <p dangerouslySetInnerHTML={{__html:this.state.content}}></p>\n                            </div>\n                        </Paper>\n                        <p>총 글자 수 : {this.state.content.length}</p> \n                    </Grid>\n                </Grid>\n                \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(PostResult);","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport {withStyles} from '@material-ui/core/styles';\n\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.primary.contrastText,\n    },\n    body: {\n      fontSize: 14,\n    },\n}))(TableCell);\n\nconst styles = theme => ({\n    root: {\n      width: '100%',\n      flexGrow: 1\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      width: '100%',\n      overflowX: 'auto',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      borderRight: '1px solid black',\n    },\n    tableWrapper: {\n        maxHeight: 440,\n        overflow: 'auto',\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    primaryColor:{\n        backgroundColor: 'blue',\n        color: 'white',\n        \n    }\n});\n\n\nclass KeywordResult extends React.Component\n{\n    constructor(props){\n        super(props);\n        this.state = {\n            classes:this.props,\n            order:'asc',\n            orderBy:'relKeyword',\n\n        }\n    }\n\n    handleRequestSort = (property) => {\n        return (event) =>{\n        const isDesc = this.state.orderBy === property && this.state.order === 'desc';\n        this.setState({order: isDesc? 'asc':'desc'});\n        this.setState({orderBy : property});\n\n        }\n    };\n    \n    desc(a, b, orderBy) {\n\n        if (b[orderBy] < a[orderBy]) {\n        return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n        return 1;\n        }\n        return 0;\n    }\n    \n    stableSort(array, cmp) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n        });\n\n        return stabilizedThis.map(el => el[0]);\n    }\n    \n    getSorting(order, orderBy) {\n        return order === 'desc' ? (a, b) => this.desc(a, b, orderBy) : (a, b) => -this.desc(a, b, orderBy);\n    }\n\n    render(){\n        const {classes} = this.props;\n        const totalPost = this.props.keywordResult[0];\n        const totalProduct = this.props.keywordResult[1];\n        const keywordData = this.props.keywordResult[2]['keywordList'];\n        const displaydata = keywordData.slice(1,Math.min(keywordData.length, 21));\n\n        const headCells = [\n            { id: 'relKeyword', numeric: false, disablePadding: true, label: '키워드' },\n            { id: 'monthlyPcQcCnt', numeric: true, disablePadding: false, label: 'PC조회수' },\n            { id: 'monthlyMobileQcCnt', numeric: true, disablePadding: false, label: 'Mobile조회수' },\n            { id: 'monthlyAvePcClkCnt', numeric: true, disablePadding: false, label: 'PC클릭수' },\n            { id: 'monthlyAveMobileClkCnt', numeric: true, disablePadding: true, label: 'Mobile클릭수' },\n            { id: 'monthlyAvePcCtr', numeric: true, disablePadding: false, label: 'PC클릭률' },\n            { id: 'monthlyAveMobileCtr', numeric: true, disablePadding: false, label: 'Mobile클릭률' },\n        ];\n\n\n        return(\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n\n                    <Table className={classes.table} border={1} size=\"small\" aria-label=\"a dense table\">\n                        <colgroup>\n                            <col style={{width:'20%'}} />\n                            <col style={{width:'20%'}} />\n                            <col style={{width:'10%'}} />\n                            <col style={{width:'10%'}} />\n                            <col style={{width:'10%'}} />\n                            <col style={{width:'10%'}} />\n                            <col style={{width:'10%'}} />\n                            <col style={{width:'10%'}} />\n                        </colgroup>\n\n                        <TableHead>\n                        <TableRow className={classes.primaryColor}>\n                            <TableCell align='center'>키워드</TableCell>\n                            <TableCell align=\"center\">총 글 수</TableCell>\n                            <TableCell align=\"center\">PC조회수</TableCell>\n                            <TableCell align=\"center\">Mobile조회수</TableCell>\n                            <TableCell align=\"center\">PC클릭수</TableCell>\n                            <TableCell align=\"center\">Mobile클릭수</TableCell>\n                            <TableCell align=\"center\">PC클릭률</TableCell>\n                            <TableCell align=\"center\">Mobile클릭률</TableCell>\n                            <TableCell align=\"center\">쇼핑상품수</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                            <TableCell align=\"center\"component=\"th\" scope=\"row\" data-title=\"token\">{keywordData[0].relKeyword}\n                            </TableCell>\n\n                            <TableCell align=\"center\">{totalPost}</TableCell>\n                            <TableCell align=\"center\">{keywordData[0].monthlyPcQcCnt}</TableCell>\n                            <TableCell align=\"center\">{keywordData[0].monthlyMobileQcCnt}</TableCell>\n                            <TableCell align=\"center\">{keywordData[0].monthlyAvePcClkCnt}</TableCell>\n                            <TableCell align=\"center\">{keywordData[0].monthlyAveMobileClkCnt}</TableCell>\n                            <TableCell align=\"center\">{keywordData[0].monthlyAvePcCtr}</TableCell>\n                            <TableCell align=\"center\">{keywordData[0].monthlyAveMobileCtr}</TableCell>\n                            <TableCell align=\"center\">{totalProduct}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Paper>     \n\n                <Paper className={classes.paper}>\n                     <div className={classes.tableWrapper}>\n                     <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n                        <colgroup>\n                            <col style={{width:'15%'}} />\n                            <col style={{width:'12.5%'}} />\n                            <col style={{width:'15%'}} />\n                            <col style={{width:'12.5%'}} />\n                            <col style={{width:'15%'}} />\n                            <col style={{width:'15%'}} />\n                            <col style={{width:'15%'}} />\n                        </colgroup>\n                        <TableHead>\n                            <TableRow >\n                                {headCells.map(row => (\n    \n                                    <StyledTableCell\n                                        key={row.id}\n                                        sortDirection={this.state.orderBy === row.id ? this.state.order : false}\n                                        align=\"center\"\n                                    >\n                                        <TableSortLabel\n                                            active={this.state.orderBy === row.id}\n                                            direction={this.state.order}\n                                            onClick={this.handleRequestSort(row.id)}\n                                        >\n                                            {row.label}\n\n            \n                                        </TableSortLabel>\n                                    </StyledTableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                            <TableBody>\n                                {this.stableSort(displaydata, this.getSorting(this.state.order, this.state.orderBy))\n                                    .map((data, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell component=\"th\" scope=\"data\" align=\"center\">{data['relKeyword']}</TableCell>\n\n                                            <TableCell align=\"center\">{data['monthlyPcQcCnt']}</TableCell>\n\n                                            <TableCell align=\"center\">{data['monthlyMobileQcCnt']}</TableCell>\n\n\n                                            <TableCell align=\"center\">{data['monthlyAvePcClkCnt']}</TableCell>\n                                            <TableCell align=\"center\">{data['monthlyAveMobileClkCnt']}</TableCell>\n                                            <TableCell align=\"center\">{data['monthlyAvePcCtr']}</TableCell>\n                                            <TableCell align=\"center\">{data['monthlyAveMobileCtr']}</TableCell>\n                                        </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </Paper>                                      \n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(KeywordResult);","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {withStyles} from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n      width: '100%',\n      flexGrow: 1\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      width: '100%',\n      overflowX: 'auto',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n              borderRight: '1px solid black',\n    },\n});\n\nclass RankResult extends React.Component\n{\n    constructor(props){\n        super(props);\n        this.state={\n            items: []\n        }\n    }\n    render(){\n        const {classes} = this.props;\n        const resultData = this.props.rankResult;\n\n\n        return(\n            <div className={classes.root}>    \n                <Paper className={classes.paper}>\n                    <Table className={classes.table} border={1} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow style={{backgroundColor:'blue', color:'white'}}>\n                                <TableCell align=\"center\">키워드</TableCell>\n                                <TableCell align=\"center\">아이디</TableCell>\n                                <TableCell align=\"center\">PC블탭순위</TableCell>\n                                <TableCell align=\"center\">뷰탭순위</TableCell>\n                                <TableCell align=\"center\">총 글 수</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n \n                            {resultData.map((row, index) =>(\n                                <TableRow key={index}>\n                                <TableCell component=\"th\" align=\"center\" >{row.keyword}\n                                </TableCell>\n\n                                <TableCell align=\"center\">{row.id}</TableCell>\n                                <TableCell align=\"center\">{row.rankBlogTab}</TableCell>\n                                <TableCell align=\"center\">{row.rankViewTab}</TableCell>\n                                <TableCell align=\"center\">{row.totalPost}</TableCell>\n                                </TableRow>\n                            ))}\n\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );    \n    }        \n}\nexport default withStyles(styles)(RankResult);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport {post} from 'axios';\n\nimport PostResult from './PostResultView';\nimport KeywordResult from './KeywordResult';\nimport RankResult from './RankResult';\nimport { classes } from 'istanbul-lib-coverage';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n  \n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top:\"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  buttonSuccess:{\n\n  },\n  linearProgress: {\n    position: \"absolute\",\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n    opacity: 0.4,\n    borderRadius: 4\n  }\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid item xs={9}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"포스팅분석\" {...a11yProps(0)} />\n            <Tab label=\"키워드조회\" {...a11yProps(1)} />\n            <Tab label=\"순위조회\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <PostTab/>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <KeywordTab/>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <RankTab/>\n        </TabPanel>\n      </Grid>\n\n    </div>\n  );\n}\n\nclass PostTab extends React.Component\n{\n  constructor(props){\n    super(props);\n    this.state={\n      postUrl:'',\n      result:''\n    }\n  }\n  handleFormSubmit=(e)=>{\n    e.preventDefault();\n    this.postAnalysis()\n        .then((res)=>{ this.setState({result: res.data});\n\n        });\n  } \n\n  handleValueChange=(e)=>{\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  postAnalysis(){\n    return post('/analysis', {command:this.state.postUrl});\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          URL : <input type=\"text\" name=\"postUrl\" value={this.state.postUrl} width=\"60%\" placeholder=\"분석할 주소를 입력하세요\" onChange={this.handleValueChange}/>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">분석</Button>\n\n        </form>\n        {this.state.result ? <PostResult postResult ={this.state.result}/> : \"\" }        \n      </div>\n    );\n  }\n}\n\nclass KeywordTab extends React.Component\n{\n  constructor(props){\n    super(props);\n    this.state={\n      keyword:'',\n      result:''\n    }\n  }\n\n  handleFormSubmit=(e)=>{\n    e.preventDefault();\n    this.keywordAnalysis()\n        .then((res)=>{ this.setState({result: res.data});\n\n        });\n  } \n\n  handleValueChange=(e)=>{\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n  \n  keywordAnalysis(){\n\n    return post('/keyword', {command:this.state.keyword});\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          Keyword : <input type=\"text\" name=\"keyword\" value={this.state.keyword} placeholder=\"조회할 키워드를 입력하세요\" onChange={this.handleValueChange}/>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">조회</Button>\n \n        </form>\n        {this.state.result ? <KeywordResult keywordResult ={this.state.result}/> : \"\" }        \n      </div>\n    );\n  }\n}\n\nclass RankTab extends React.Component\n{\n  constructor(props){\n    super(props);\n    this.state={\n      rankId:'',\n      rankKeyword:'',\n      result:[],\n      loading: false,\n    }\n  } \n  \n  handleFormSubmit=(e)=>{\n    e.preventDefault();\n\n    this.setState({loading:true});\n    this.rankAnalysis()\n        .then((res)=>{ \n\n          \n          if(this.state.result.length)\n          {\n            let tabledata = this.state.result;\n            tabledata.push(res.data);\n            this.setState({result:tabledata});\n\n          }\n          else{\n            this.setState({result: [res.data]});\n\n          }\n\n          this.setState({loading:false});\n\n        });\n  } \n\n\n  handleValueChange=(e)=>{\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  rankAnalysis(){\n\n    return post('/rank', {id:this.state.rankId, keyword:this.state.rankKeyword});\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          아이디 : <input type=\"text\" name=\"rankId\" value={this.state.rankId} width=\"60%\" placeholder=\"아이디를 입력하세요\" onChange={this.handleValueChange}/>\n          키워드 : <input type=\"text\" name=\"rankKeyword\" value={this.state.rankKeyword} width=\"60%\" placeholder=\"키워드를 입력하세요\" onChange={this.handleValueChange}/>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.buttonProgress} disabled={this.state.loading}>확인</Button>\n          {this.state.loading && (<LinearProgress color='secondary' className={classes.linearProgress}/>)}\n\n        </form>\n        {this.state.result.length ? <RankResult rankResult ={this.state.result}/> : \"\" }      \n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\n\nimport SimpleTabs from './components/ClientView';\n// import RankResult from './components/RankResultView';\n\n\n\n// function App() {\nclass App extends React.Component{\n  render(){\n    return (\n      <SimpleTabs />\n    );\n  }\n}\n  \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}